@model PagedList.IPagedList<BitClassroom.DAL.Models.UserViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}

<h2>BitClassroom Users</h2>

<p>
    @Html.ActionLink("Create New", "Register", "Account")
</p>



<div class="col-lg-5 col-lg-offset-4">

    <row>
        <div class="col-md-2">
            @using (Html.BeginForm("Index", "UserViews", FormMethod.Get))
            {
                <input type="submit" class="btn btn-primary" value="Reset" />
            }

        </div>
        <div class="col-md-9">
            @using (Html.BeginForm("Index", "UserViews", FormMethod.Get))
            {
                <input type="submit" class="btn btn-primary" value="Search" /> @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            }
        </div>
    </row>

</div>
<br />
<br />
<br />


<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortingOrder = ViewBag.UserNameSort, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortingOrder = ViewBag.UserLastnameSort, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Email", "Index", new { sortingOrder = ViewBag.EmailSort, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Role", "Index", new { sortingOrder = ViewBag.RoleSort, currentFilter = ViewBag.CurrentFilter })
        </th>

    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lastname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role)
            </td>

            <td>

                @Html.ActionLink("Details", "Details", new { userId = item.Id}) |
                @Html.ActionLink("Edit", "Edit", new { userId = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { userId = item.Id })
            </td>
        </tr>
    }

</table>




<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))



@using (Html.BeginForm("Index", "Home", "Home"))
{
    <input type="submit" class="btn btn-primary" value="Back" />
}